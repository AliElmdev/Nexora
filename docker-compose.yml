services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cultural-chat-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: cultural_chat
      POSTGRES_USER: chat_user
      POSTGRES_PASSWORD: chat_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - cultural-chat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chat_user -d cultural_chat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: cultural-chat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cultural-chat-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cultural-chat-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://chat_user:chat_password@postgres:5432/cultural_chat
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=your-secret-key-here-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cultural-chat-network
    volumes:
      - ./public:/app/public
      - ./prisma:/app/prisma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  cultural-chat-network:
    driver: bridge 